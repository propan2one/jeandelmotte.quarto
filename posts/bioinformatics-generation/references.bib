
@article{okonechnikov_unipro_2012,
	title = {Unipro {UGENE}: a unified bioinformatics toolkit},
	volume = {28},
	issn = {1367-4803},
	url = {https://doi.org/10.1093/bioinformatics/bts091},
	doi = {10.1093/bioinformatics/bts091},
	abstract = {Summary: Unipro {UGENE} is a multiplatform open-source software with the main goal of assisting molecular biologists without much expertise in bioinformatics to manage, analyze and visualize their data. {UGENE} integrates widely used bioinformatics tools within a common user interface. The toolkit supports multiple biological data formats and allows the retrieval of data from remote data sources. It provides visualization modules for biological objects such as annotated genome sequences, Next Generation Sequencing ({NGS}) assembly data, multiple sequence alignments, phylogenetic trees and 3D structures. Most of the integrated algorithms are tuned for maximum performance by the usage of multithreading and special processor instructions. {UGENE} includes a visual environment for creating reusable workflows that can be launched on local resources or in a High Performance Computing ({HPC}) environment. {UGENE} is written in C++ using the Qt framework. The built-in plugin system and structured {UGENE} {API} make it possible to extend the toolkit with new functionality.Availability and implementation: {UGENE} binaries are freely available for {MS} Windows, Linux and Mac {OS} X at http://ugene.unipro.ru/download.html. {UGENE} code is licensed under the {GPLv}2; the information about the code licensing and copyright of integrated tools can be found in the {LICENSE}.3rd\_party file provided with the source bundle.Contact:ugene@unipro.{ruSupplementary} information:Supplementary data are available at Bioinformatics online.},
	pages = {1166--1167},
	number = {8},
	journaltitle = {Bioinformatics},
	author = {Okonechnikov, Konstantin and Golosova, Olga and Fursov, Mikhail and team, the {UGENE}},
	date = {2012-02-24},
	note = {Number: 8
\_eprint: https://academic.oup.com/bioinformatics/article-pdf/28/8/1166/18531177/bts091.pdf},
	keywords = {Bioinformatics, Genomics, Bioinformatics tool, Genome browser, Global, Database, Protein},
}

@article{afgan_galaxy_2018,
	title = {The Galaxy platform for accessible, reproducible and collaborative biomedical analyses: 2018 update},
	volume = {46},
	issn = {0305-1048},
	url = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6030816/},
	doi = {10.1093/nar/gky379},
	shorttitle = {The Galaxy platform for accessible, reproducible and collaborative biomedical analyses},
	abstract = {Galaxy (homepage: https://galaxyproject.org, main public server: https://usegalaxy.org) is a web-based scientific analysis platform used by tens of thousands of scientists across the world to analyze large biomedical datasets such as those found in genomics, proteomics, metabolomics and imaging. Started in 2005, Galaxy continues to focus on three key challenges of data-driven biomedical science: making analyses accessible to all researchers, ensuring analyses are completely reproducible, and making it simple to communicate analyses so that they can be reused and extended. During the last two years, the Galaxy team and the open-source community around Galaxy have made substantial improvements to Galaxy's core framework, user interface, tools, and training materials. Framework and user interface improvements now enable Galaxy to be used for analyzing tens of thousands of datasets, and {\textgreater}5500 tools are now available from the Galaxy {ToolShed}. The Galaxy community has led an effort to create numerous high-quality tutorials focused on common types of genomic analyses. The Galaxy developer and user communities continue to grow and be integral to Galaxy's development. The number of Galaxy public servers, developers contributing to the Galaxy framework and its tools, and users of the main Galaxy server have all increased substantially.},
	pages = {W537--W544},
	issue = {Web Server issue},
	journaltitle = {Nucleic Acids Research},
	shortjournal = {Nucleic Acids Res},
	author = {Afgan, Enis and Baker, Dannon and Batut, Bérénice and van den Beek, Marius and Bouvier, Dave and Čech, Martin and Chilton, John and Clements, Dave and Coraor, Nate and Grüning, Björn A and Guerler, Aysam and Hillman-Jackson, Jennifer and Hiltemann, Saskia and Jalili, Vahid and Rasche, Helena and Soranzo, Nicola and Goecks, Jeremy and Taylor, James and Nekrutenko, Anton and Blankenberg, Daniel},
	urldate = {2025-01-05},
	date = {2018-07-02},
	pmid = {29790989},
	pmcid = {PMC6030816},
	keywords = {Bioinformatics, Workflow, Blog},
	file = {PubMed Central Full Text PDF:C\:\\Users\\dodus\\Zotero\\storage\\BHINA5P5\\Afgan et al. - 2018 - The Galaxy platform for accessible, reproducible a.pdf:application/pdf},
}

@article{ahmed_design_2021,
	title = {Design considerations for workflow management systems use in production genomics research and the clinic},
	volume = {11},
	rights = {2021 The Author(s)},
	issn = {2045-2322},
	url = {https://www.nature.com/articles/s41598-021-99288-8},
	doi = {10.1038/s41598-021-99288-8},
	abstract = {The changing landscape of genomics research and clinical practice has created a need for computational pipelines capable of efficiently orchestrating complex analysis stages while handling large volumes of data across heterogeneous computational environments. Workflow Management Systems ({WfMSs}) are the software components employed to fill this gap. This work provides an approach and systematic evaluation of key features of popular bioinformatics {WfMSs} in use today: Nextflow, {CWL}, and {WDL} and some of their executors, along with Swift/T, a workflow manager commonly used in high-scale physics applications. We employed two use cases: a variant-calling genomic pipeline and a scalability-testing framework, where both were run locally, on an {HPC} cluster, and in the cloud. This allowed for evaluation of those four {WfMSs} in terms of language expressiveness, modularity, scalability, robustness, reproducibility, interoperability, ease of development, along with adoption and usage in research labs and healthcare settings. This article is trying to answer, which {WfMS} should be chosen for a given bioinformatics application regardless of analysis type?. The choice of a given {WfMS} is a function of both its intrinsic language and engine features. Within bioinformatics, where analysts are a mix of dry and wet lab scientists, the choice is also governed by collaborations and adoption within large consortia and technical support provided by the {WfMS} team/community. As the community and its needs continue to evolve along with computational infrastructure, {WfMSs} will also evolve, especially those with permissive licenses that allow commercial use. In much the same way as the dataflow paradigm and containerization are now well understood to be very useful in bioinformatics applications, we will continue to see innovations of tools and utilities for other purposes, like big data technologies, interoperability, and provenance.},
	pages = {21680},
	number = {1},
	journaltitle = {Scientific Reports},
	shortjournal = {Sci Rep},
	author = {Ahmed, Azza E. and Allen, Joshua M. and Bhat, Tajesvi and Burra, Prakruthi and Fliege, Christina E. and Hart, Steven N. and Heldenbrand, Jacob R. and Hudson, Matthew E. and Istanto, Dave Deandre and Kalmbach, Michael T. and Kapraun, Gregory D. and Kendig, Katherine I. and Kendzior, Matthew Charles and Klee, Eric W. and Mattson, Nate and Ross, Christian A. and Sharif, Sami M. and Venkatakrishnan, Ramshankar and Fadlelmola, Faisal M. and Mainzer, Liudmila S.},
	urldate = {2024-11-30},
	date = {2021-11-04},
	langid = {english},
	note = {Publisher: Nature Publishing Group},
	keywords = {Bioinformatics workflow, Data processing, Computational biology and bioinformatics, Computational platforms and environments, Programming language, blog},
	file = {Full Text PDF:C\:\\Users\\dodus\\Zotero\\storage\\GZ363DNE\\Ahmed et al. - 2021 - Design considerations for workflow management syst.pdf:application/pdf},
}

@article{molder_sustainable_2021,
	title = {Sustainable data analysis with Snakemake},
	rights = {http://creativecommons.org/licenses/by/4.0/},
	url = {https://f1000research.com/articles/10-33},
	abstract = {Data analysis often entails a multitude of heterogeneous steps, from the application of various command line tools to the usage of scripting languages like R or Python for the generation of plots and tables. It is widely recognized that data analyses should ideally be conducted in a reproducible way.\&nbsp;Reproducibility enables technical validation and regeneration of results on the original or even new data. However, reproducibility alone is by no means sufficient to deliver an analysis that is of lasting impact (i.e., sustainable) for the field, or even just one research group. We postulate that it is equally important to ensure adaptability and transparency. The former describes the ability to modify the analysis to answer extended or slightly different research questions. The latter describes the ability to understand the analysis in order to judge whether it is not only technically, but methodologically valid. Here, we analyze the properties needed for a data analysis to become reproducible, adaptable, and transparent. We show how the popular workflow management system Snakemake can be used to guarantee this, and how it enables an ergonomic, combined, unified representation of all steps involved in data analysis, ranging from raw data processing, to quality control and fine-grained, interactive exploration and plotting of final results.},
	author = {Mölder, Felix and Jablonski, Kim Philipp and Letcher, Brice and Hall, Michael B. and Tomkins-Tinch, Christopher H. and Sochat, Vanessa and Forster, Jan and Lee, Soohyun and Twardziok, Sven O. and Kanitz, Alexander and Wilm, Andreas and Holtgrewe, Manuel and Rahmann, Sven and Nahnsen, Sven and Köster, Johannes},
	urldate = {2023-12-13},
	date = {2021-01-18},
	langid = {english},
	doi = {10.12688/f1000research.29032.1},
	note = {Type: article},
	keywords = {Bioinformatics, Bioinformatics workflow, Reproducibility, Snakemake, Snakemake pipeline, Adaptability, Data analysis, Scalability, Sustainability, Transparency, Workflow management},
}


@article{ewels_nf-core_2020,
	title = {The nf-core framework for community-curated bioinformatics pipelines},
	volume = {38},
	rights = {2020 The Author(s), under exclusive licence to Springer Nature America, Inc.},
	issn = {1546-1696},
	url = {https://www.nature.com/articles/s41587-020-0439-x},
	doi = {10.1038/s41587-020-0439-x},
	pages = {276--278},
	number = {3},
	journaltitle = {Nature Biotechnology},
	shortjournal = {Nat Biotechnol},
	author = {Ewels, Philip A. and Peltzer, Alexander and Fillinger, Sven and Patel, Harshil and Alneberg, Johannes and Wilm, Andreas and Garcia, Maxime Ulysse and Di Tommaso, Paolo and Nahnsen, Sven},
	urldate = {2025-01-05},
	date = {2020-02-13},
	langid = {english},
	note = {Publisher: Nature Publishing Group},
	keywords = {Nextflow, Nextflow workflow, Computational biology and bioinformatics, Scientific community},
	file = {10.1038@s41587-020-0439-x.pdf:C\:\\Users\\dodus\\Downloads\\Telegram Desktop\\10.1038@s41587-020-0439-x.pdf:application/pdf},
}
